<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxd.dao.RoleMapper">
  <resultMap id="roleMap" type="com.hxd.bean.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="roleName" jdbcType="VARCHAR" property="rolename" />
    <result column="roleDesc" jdbcType="VARCHAR" property="roledesc" />
    <result column="isEnable" jdbcType="TINYINT" property="isenable" />
  </resultMap>
  <sql id="Base_Column_List">
    id, roleName, roleDesc, isEnable
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="roleMap">
    select 
    	<include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteRoleByBatch" parameterType="java.util.List">
	delete from role
  		<where>
 		 	<foreach collection="list" index="index" item="item" open="(" separator="or" close=")">     
  				id=#{item}
    		</foreach>
  		</where>
  </delete>
  <insert id="insert" parameterType="com.hxd.bean.Role">
    insert into role (id, roleName, roleDesc, 
      isEnable)
    values (#{id,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{roledesc,jdbcType=VARCHAR}, 
      #{isenable,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hxd.bean.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rolename != null">
        roleName,
      </if>
      <if test="roledesc != null">
        roleDesc,
      </if>
      <if test="isenable != null">
        isEnable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null">
        #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="isenable != null">
        #{isenable,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hxd.bean.Role">
    update role
    <set>
      <if test="rolename != null">
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null">
        roleDesc = #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="isenable != null">
        isEnable = #{isenable,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hxd.bean.Role">
    update role
    set roleName = #{rolename,jdbcType=VARCHAR},
      roleDesc = #{roledesc,jdbcType=VARCHAR},
      isEnable = #{isenable,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
 
 <select id="queryAllRole" resultMap="roleMap">
	SELECT 
	        <include refid="Base_Column_List" />
		FROM role  
 </select>
 
 <select id="queryRoleListByPage" resultMap="roleMap" parameterType="map">
		SELECT 
	        <include refid="Base_Column_List" />
		from role 

		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="sSearch != null">
				AND (
					roleName like CONCAT('%',#{sSearch},'%')
				)
      		</if>
      	</trim>

		<choose>
			<when test="orderField !=null and orderField !=''">
				 ORDER BY ${orderField} <if test="orderDirection != null and orderDirection != ''">${orderDirection}</if>
			</when>
			<otherwise>
				 order by id DESC
			</otherwise>
		</choose>
      	 
	</select>
	
	<select id="queryRoleListCount" resultType="java.lang.Integer" parameterType="map">
		select count(0) as c from role
	
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="sSearch != null">
				AND (
					roleName like CONCAT('%',#{sSearch},'%')
					
				)
      		</if>
      	</trim>
	</select>
</mapper>